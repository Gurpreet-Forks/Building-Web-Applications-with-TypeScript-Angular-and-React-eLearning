{"version":3,"sources":["server/database.ts"],"names":[],"mappings":"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","file":"database.js","sourcesContent":["import { MongoClient, Db, Collection } from \"mongodb\";\r\nimport { User } from \"./user\";\r\nimport { Note } from \"./note\";\r\n\r\nexport interface Table<T> extends Collection {\r\n\t__tableBrand: T;\r\n}\r\n\r\nconst databaseUrl = \"mongodb://localhost/notes\";\r\nconst database = new Promise<Db>(resolve => {\r\n\tMongoClient.connect(databaseUrl, (error, db) => {\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tresolve(db);\r\n\t})\r\n});\r\nasync function getCollection<U>(name: string) {\r\n\tconst db = await database;\r\n\treturn <Table<U>> db.collection(name);\r\n}\r\nexport const users = getCollection<User>(\"users\");\r\nexport const notes = getCollection<Note>(\"notes\");\r\n\r\nexport async function insert<U>(table: Promise<Table<U>>, item: U) {\r\n\tconst collection = await table;\r\n\treturn new Promise<void>((resolve, reject) => {\r\n\t\tcollection.insertOne(item, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t} else {\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\nexport async function update<U extends V, V>(table: Promise<Table<U>>, query: V, newItem: U) {\r\n\tconst collection = await table;\r\n\treturn new Promise<void>((resolve, reject) => {\r\n\t\tcollection.updateOne(query, newItem, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t} else {\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\nexport async function remove<U extends V, V>(table: Promise<Table<U>>, query: V) {\r\n\tconst collection = await table;\r\n\treturn new Promise<void>((resolve, reject) => {\r\n\t\tcollection.deleteOne(query, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t} else {\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\nexport async function find<U extends V, V>(table: Promise<Table<U>>, query: V) {\r\n\tconst collection = await table; \r\n\treturn new Promise<U[]>((resolve, reject) => {\r\n\t\tcollection.find(query, (error, cursor) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t} else {\r\n\t\t\t\tcursor.toArray((error, results) => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresolve(results);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n"]}